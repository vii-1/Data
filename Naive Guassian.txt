
import numpy as np
import pandas as pd
import seaborn as sns
df = pd.read_csv("iris.csv")
df


df.head()

df.tail()

df.dtypes

df.info()

df.describe()

df.columns
Index(['sepal_length', 'sepal_width', 'petal_length', 'petal_width',
       'species'],
      dtype='object')
df.isnull().sum()

from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
def z_normalize(feature):
    global df
    df[feature] = (df[feature] - df[feature].mean()) / (df[feature].std())

cols = list(df.columns)
print(cols)
del cols[4]
print(cols)
for i in range(len(cols)):
    z_normalize(cols[i])
['sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'species']
['sepal_length', 'sepal_width', 'petal_length', 'petal_width']
df

df.describe()

gaussian = GaussianNB()
X = df[['sepal_length', 'sepal_width', 'petal_length', 'petal_width']]
y = df['species']
print(X)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 42)
gaussian.fit(X_train, y_train)
GaussianNB()

y_pred = gaussian.predict(X_test)
print(len(y_pred))

print(np.array(y_pred))

print(np.array(y_test))

from sklearn.metrics import confusion_matrix, precision_score, accuracy_score, recall_score, f1_score
cm = confusion_matrix(y_test, y_pred)
cm